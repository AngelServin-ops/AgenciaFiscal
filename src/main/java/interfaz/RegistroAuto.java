/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import dominio.Automovil;
import dominio.CostoTramite;
import dominio.Persona;
import implementaciones.PersonaDAO;
import implementaciones.PlacaDAO;
import implementaciones.VehiculoDAO;
import interfaces.IPersonaDAO;
import interfaces.IPlacaDAO;
import interfaces.IVehiculoDAO;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import utils.Validadores;

/**
 *
 * @author Usuario
 */
public class RegistroAuto extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(RegistroAuto.class.getName());

    private final String rfc;
    private final IPersonaDAO a = new PersonaDAO();
    private final IVehiculoDAO b = new VehiculoDAO();
    private final IPlacaDAO c = new PlacaDAO();
    private final CostoTramite d = new CostoTramite();
    private final Validadores validadores = new Validadores();

    public RegistroAuto() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.rfc = null;
    }

    public RegistroAuto(String rfc) {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        this.rfc = rfc;
        this.insertarDatosPersona();
        this.agregarManejadoresMouse();
    }

    private void insertarDatosPersona() {
        Persona persona = this.a.buscarPersonasRFC(rfc);
        if (persona != null) {
            String nombreCompleto = "Persona: " + persona.getNombre() + " " + persona.getApellidoPaterno() + " " + persona.getApellidoMaterno();
            logger.info(nombreCompleto);

        } else {
            logger.warning("No se encontró persona con RFC: " + rfc);
        }
    }

    private Automovil extraerDatosFormulario() {
        String serie = lblSerie.getText().toUpperCase();
        String marca = lblMarca.getText().toUpperCase();
        String linea = lblLinea.getText().toUpperCase();
        String color = lblColor.getText().toUpperCase();

        Integer modelo = Integer.valueOf(lblModelo.getText());

        Automovil auto = new Automovil();
        auto.setSerie(serie);
        auto.setMarca(marca);
        auto.setLinea(linea);
        auto.setColor(color);
        auto.setModelo(modelo);
        return auto;
    }

    private void agregarManejadoresMouse() {

        MouseAdapter handCursorAdapter = new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent evt) {
                setCursor(new Cursor(Cursor.HAND_CURSOR));
            }

            @Override
            public void mouseExited(MouseEvent evt) {
                setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        };

        lblAtras.addMouseListener(handCursorAdapter);
        lblRegistrar.addMouseListener(handCursorAdapter);
    }

    private void lblMarcaKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();
        if (!Character.isLetter(car) && lblMarca.getText().length() >= 100) {
            evt.consume();
        } else if (lblMarca.getText().length() >= 100 && !Character.isLetterOrDigit(car)) {
            evt.consume();
        }
    }

    private void lblColorKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();
        if (!Character.isLetter(car) && lblColor.getText().length() >= 100) {
            evt.consume();
        } else if (lblColor.getText().length() >= 100 && !Character.isLetterOrDigit(car)) {
            evt.consume();
        }
    }

    private void lblModeloKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();

        if (!Character.isDigit(car) || lblModelo.getText().length() >= 10) {
            evt.consume();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblModelo = new javax.swing.JTextField();
        lblColor = new javax.swing.JTextField();
        lblLinea = new javax.swing.JTextField();
        lblMarca = new javax.swing.JTextField();
        lblSerie = new javax.swing.JTextField();
        lblAtras = new javax.swing.JLabel();
        lblRegistrar = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblModelo.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        lblModelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblModeloMouseClicked(evt);
            }
        });
        getContentPane().add(lblModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 560, 420, 60));

        lblColor.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        lblColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblColorMouseClicked(evt);
            }
        });
        getContentPane().add(lblColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 470, 420, 60));

        lblLinea.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        lblLinea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLineaMouseClicked(evt);
            }
        });
        getContentPane().add(lblLinea, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, 420, 60));

        lblMarca.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        lblMarca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMarcaMouseClicked(evt);
            }
        });
        getContentPane().add(lblMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 420, 60));

        lblSerie.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        lblSerie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSerieMouseClicked(evt);
            }
        });
        getContentPane().add(lblSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 420, 60));

        lblAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAtrasMouseClicked(evt);
            }
        });
        getContentPane().add(lblAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 90, 80));

        lblRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegistrarMouseClicked(evt);
            }
        });
        getContentPane().add(lblRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 690, 310, 60));

        jTextField5.setText("jTextField1");
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 420, 60));

        jLabel1.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/RegistrarAuto.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSerieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSerieMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSerieMouseClicked

    private void lblMarcaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMarcaMouseClicked
        //TODO add your handling code here:
    }//GEN-LAST:event_lblMarcaMouseClicked

    private void lblLineaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLineaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblLineaMouseClicked

    private void lblColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblColorMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblColorMouseClicked

    private void lblModeloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModeloMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblModeloMouseClicked

    private void lblRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegistrarMouseClicked

        if (lblSerie.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado un número de serie al vehículo", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (lblMarca.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado una marca al vehículo", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (validadores.validaCaracteristicasVehiculo(lblMarca.getText())) {
            JOptionPane.showMessageDialog(this, "La marca ingresada al vehículo no es valida\n"
                    + "Recordatorio: Debe contener solo letras y de longitud máxima de 100 carácteres", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (lblLinea.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado una línea al vehículo", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (validadores.validaCaracteristicasVehiculo(lblLinea.getText())) {
            JOptionPane.showMessageDialog(this, "La línea ingresada al vehículo no es valida\n"
                    + "Recordatorio: Debe contener solo letras y de longitud máxima de 100 carácteres", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (lblColor.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado un color al vehículo", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (validadores.validaCaracteristicasVehiculo(lblColor.getText())) {
            JOptionPane.showMessageDialog(this, "El color ingresado al vehículo no es valido\n"
                    + "Recordatorio: Debe contener solo letras y de longitud máxima de 100 carácteres", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (lblModelo.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "No ha ingresado un modelo al vehículo", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!validadores.validaModelo(lblModelo.getText())) {
            JOptionPane.showMessageDialog(this, "El modelo ingresado al vehículo no es valido\n"
                    + "Recordatorio: Debe contener solo números y de longitud máxima de 10 carácteres (19XX, 20XX)", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Persona persona = a.buscarPersonasRFC(rfc);
                Automovil auto = this.extraerDatosFormulario();
                Double costo = d.placaNuevo;
                String placa = c.generarPlaca();

                b.registrarVehiculoPersona(auto, persona);
                c.insertarTramitePlacasNuevo(persona, auto, placa, costo);

                JOptionPane.showMessageDialog(this, "Se ha registrado el vehículo:\n"
                        + "Placa: " + placa + "\n"
                        + "No. Serie: " + auto.getSerie() + "\n"
                        + "Marca: " + auto.getMarca() + "\n"
                        + "Linea: " + auto.getLinea() + "\n"
                        + "Color: " + auto.getColor() + "\n"
                        + "Modelo: " + auto.getModelo() + "", "Aviso", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception e) {
                logger.severe("Error al registrar vehículo y placas: " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Ocurrió un error al procesar el registro.", "Error de Sistema", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_lblRegistrarMouseClicked

    private void lblAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtrasMouseClicked

        CostosPlacas frameAnterior = new CostosPlacas();

        frameAnterior.setVisible(true);

        dispose();
    }//GEN-LAST:event_lblAtrasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel lblAtras;
    private javax.swing.JTextField lblColor;
    private javax.swing.JTextField lblLinea;
    private javax.swing.JTextField lblMarca;
    private javax.swing.JTextField lblModelo;
    private javax.swing.JLabel lblRegistrar;
    private javax.swing.JTextField lblSerie;
    // End of variables declaration//GEN-END:variables
}
