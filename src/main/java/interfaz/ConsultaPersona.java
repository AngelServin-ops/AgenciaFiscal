/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import dominio.Persona;
import implementaciones.PersonaDAO;
import interfaces.IPersonaDAO;
import java.awt.Cursor;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import utils.ConfiguracionPaginado;

/**
 *
 * @author Usuario
 */
public class ConsultaPersona extends javax.swing.JFrame {

    private final IPersonaDAO a = new PersonaDAO();
    Persona persona = new Persona();
    private final ConfiguracionPaginado configPaginado;
    private static final Logger LOG = Logger.getLogger(PersonaDAO.class.getName());
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ConsultaPersona.class.getName());

    /**
     * Creates new form ConsultaPersona
     */
    public ConsultaPersona() {

        this.configPaginado = new ConfiguracionPaginado(0, 5);
        initComponents();
        setResizable(false);
        aplicarKeyListeners();
        setLocationRelativeTo(null);
    }

    private void aplicarKeyListeners() {

        txtRFC.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent evt) {
                txtRFCKeyTyped(evt);
            }
        });

        txtNombre.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtAño.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent evt) {
                txtAnoKeyTyped(evt);
            }
        });
    }

    private List<Persona> extraerDatosFormularioPersona() {
        String RFC = txtRFC.getText();
        String nombre = txtNombre.getText();
        String ano = txtAño.getText();
        return a.buscarPersonas(configPaginado, RFC, nombre, ano);
    }

    private void cargarTablaPersona() {
        try {
            List<Persona> listaPersona = this.extraerDatosFormularioPersona();

            DefaultTableModel modeloTabla = (DefaultTableModel) this.jTable1.getModel();
            modeloTabla.setRowCount(0);

            for (Persona persona : listaPersona) {
                Calendar fechaNacimiento = persona.getFechaNacimiento();
                Date date = fechaNacimiento.getTime();
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String fechaN = sdf.format(date);

                Object[] fila = {
                    persona.getRfc(),
                    persona.getNombre() + " " + persona.getApellidoPaterno() + " " + persona.getApellidoMaterno(),
                    fechaN,
                    persona.getTelefono()
                };
                modeloTabla.addRow(fila);
            }
        } catch (Exception e) {
            LOG.log(Level.SEVERE, "Error al cargar la tabla de personas: " + e.getMessage());
        }
    }

    private void validaBusqueda() {

        this.cargarTablaPersona();

        if (this.extraerDatosFormularioPersona().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se ha encontrado ninguna persona con los parámetros buscados dentro del sistema", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblSiguiente = new javax.swing.JLabel();
        lblBuscar = new javax.swing.JLabel();
        lblAtras = new javax.swing.JLabel();
        txtAño = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtRFC = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "RFC", "Nombres", "Fecha de nacimiento", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 1040, 210));

        lblSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSiguienteMouseClicked(evt);
            }
        });
        getContentPane().add(lblSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 690, 210, 50));

        lblBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBuscarMouseClicked(evt);
            }
        });
        getContentPane().add(lblBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 210, 70, 70));

        lblAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAtrasMouseClicked(evt);
            }
        });
        getContentPane().add(lblAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, 80));

        txtAño.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        txtAño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAñoActionPerformed(evt);
            }
        });
        getContentPane().add(txtAño, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 212, 300, 60));

        txtNombre.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 212, 350, 60));

        txtRFC.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        txtRFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRFCActionPerformed(evt);
            }
        });
        getContentPane().add(txtRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 212, 260, 60));
        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/ConsultaPersona.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRFCActionPerformed

        this.validaBusqueda();
    }//GEN-LAST:event_txtRFCActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed

        this.validaBusqueda();
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtAñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAñoActionPerformed

        this.validaBusqueda();
    }//GEN-LAST:event_txtAñoActionPerformed

    private void lblSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSiguienteMouseClicked
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila en la tabla.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            String RFC = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            HistorialTramite v = new HistorialTramite(RFC);
            v.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_lblSiguienteMouseClicked

    private void lblBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBuscarMouseClicked
        this.validaBusqueda();
    }//GEN-LAST:event_lblBuscarMouseClicked

    private void txtRFCKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();
        if (!Character.isLetterOrDigit(car) && txtRFC.getText().length() >= 13) {
            evt.consume();
        } else if (txtRFC.getText().length() >= 13 && !Character.isDigit(car)) {
            evt.consume();
        }
    }

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();

        if (txtNombre.getText().length() >= 300 || Character.isDigit(car)) {
            evt.consume();
        } else if (!Character.isLetter(car) && car != ' ' && !Character.isISOControl(car)) {
            evt.consume();
        }
    }

    private void txtAnoKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();

        if (!Character.isDigit(car) || txtAño.getText().length() >= 4) {
            evt.consume();
        }
    }
    private void lblAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtrasMouseClicked
        Aplicacion v = new Aplicacion();
        v.setVisible(true);
        dispose();
    }//GEN-LAST:event_lblAtrasMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAtras;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblSiguiente;
    private javax.swing.JTextField txtAño;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    // End of variables declaration//GEN-END:variables
}
