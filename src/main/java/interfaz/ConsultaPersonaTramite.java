/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import dominio.Persona;
import implementaciones.PersonaDAO;
import interfaces.IPersonaDAO;
import java.awt.Cursor;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.ConfiguracionPaginado;

/**
 *
 * @author Usuario
 */
public class ConsultaPersonaTramite extends javax.swing.JFrame {

    private final IPersonaDAO a = new PersonaDAO();
    Persona persona = new Persona();
    private final ConfiguracionPaginado configPaginado;
    private static final Logger LOG = Logger.getLogger(PersonaDAO.class.getName());

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ConsultaPersonaTramite.class.getName());

    /**
     * Creates new form ConsultaPersonaTramite
     */
    public ConsultaPersonaTramite() {
        initComponents();
        setResizable(false);
        this.configPaginado = new ConfiguracionPaginado(0, 5);
        setLocationRelativeTo(null);
    }

    private List<Persona> extraerDatosFormularioPersona() {

        String RFC = txtRFC.getText();
        String nombre = txtNombreCompleto.getText();
        String ano = txtAñoNacimiento.getText();
        return a.buscarPersonas(configPaginado, RFC, nombre, ano);
    }

    private void cargarTablaPersona() {
        this.extraerDatosFormularioPersona();
        try {
            List<Persona> listaPersona = this.extraerDatosFormularioPersona();

            DefaultTableModel modeloTabla = (DefaultTableModel) this.jTable1.getModel();
            modeloTabla.setRowCount(0);
            for (Persona persona : listaPersona) {
                Calendar fechaNacimiento = persona.getFechaNacimiento();
                Date date = fechaNacimiento.getTime();
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String fechaN = sdf.format(date);
                Object[] fila = {
                    persona.getRfc(),
                    persona.getNombre() + " " + persona.getApellidoPaterno() + " " + persona.getApellidoMaterno(),
                    fechaN,
                    persona.getTelefono()
                };
                modeloTabla.addRow(fila);
            }
        } catch (Exception e) {
            LOG.log(Level.SEVERE, e.getMessage());
        }
    }

    private void avanzarPagina() {
        this.configPaginado.avanzarPagina();
        this.cargarTablaPersona();
    }

    private void retrocederPagina() {
        this.configPaginado.retrocederPagina();
        this.cargarTablaPersona();
    }

    private void lblAtrasMouseEntered(java.awt.event.MouseEvent evt) {
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }

    private void lblAtrasMouseExited(java.awt.event.MouseEvent evt) {
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }

    private void txtRFCKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();
        if (!Character.isLetterOrDigit(car) && txtRFC.getText().length() >= 13) {
            evt.consume();
        } else if (txtRFC.getText().length() >= 13 && !Character.isDigit(car)) {
            evt.consume();
        }
    }

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();

        if (!Character.isLetter(car) && txtNombreCompleto.getText().length() >= 300) {
            evt.consume();
        } else if (txtNombreCompleto.getText().length() >= 300 && Character.isDigit(car)) {
            evt.consume();
        } else if (Character.isDigit(car)) {
            evt.consume();
        }
    }

    private void txtAnoKeyTyped(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();
        // Se usa el nuevo nombre del campo: txtAñoNacimiento
        if (!Character.isDigit(car)) {
            evt.consume();
        } else if (txtAñoNacimiento.getText().length() >= 10) {
            evt.consume();
        }
    }

    private void validaBusqueda() {
        if (this.extraerDatosFormularioPersona().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se ha encontrado ni una persona con los parametros buscados dentro del sistema", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtRFC = new javax.swing.JTextField();
        lblAvanzar = new javax.swing.JLabel();
        txtAñoNacimiento = new javax.swing.JTextField();
        lblAtras = new javax.swing.JLabel();
        lblSiguiente = new javax.swing.JLabel();
        txtNombreCompleto = new javax.swing.JTextField();
        lblRetroceder = new javax.swing.JLabel();
        lblBuscar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "RFC", "Nombres", "Fecha de nacimiento", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jScrollPane2.setViewportView(jScrollPane1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 970, 350));

        txtRFC.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        txtRFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRFCActionPerformed(evt);
            }
        });
        getContentPane().add(txtRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 250, 70));

        lblAvanzar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAvanzarMouseClicked(evt);
            }
        });
        getContentPane().add(lblAvanzar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1037, 706, 60, 60));

        txtAñoNacimiento.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        txtAñoNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAñoNacimientoActionPerformed(evt);
            }
        });
        getContentPane().add(txtAñoNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, 290, 70));

        lblAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAtrasMouseClicked(evt);
            }
        });
        getContentPane().add(lblAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 90, 80));

        lblSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSiguienteMouseClicked(evt);
            }
        });
        getContentPane().add(lblSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 690, 210, 50));

        txtNombreCompleto.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        txtNombreCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreCompletoActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombreCompleto, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 320, 60));

        lblRetroceder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRetrocederMouseClicked(evt);
            }
        });
        getContentPane().add(lblRetroceder, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 710, 60, 50));

        lblBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBuscarMouseClicked(evt);
            }
        });
        getContentPane().add(lblBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 260, 60, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/ConsultaPersonaTramite.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRFCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRFCActionPerformed

    private void txtNombreCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreCompletoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreCompletoActionPerformed

    private void txtAñoNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAñoNacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAñoNacimientoActionPerformed

    private void lblBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBuscarMouseClicked
        this.validaBusqueda();
        this.cargarTablaPersona();
    }//GEN-LAST:event_lblBuscarMouseClicked

    private void lblRetrocederMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRetrocederMouseClicked
        this.retrocederPagina();
    }//GEN-LAST:event_lblRetrocederMouseClicked

    private void lblAvanzarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAvanzarMouseClicked
        this.avanzarPagina();
    }//GEN-LAST:event_lblAvanzarMouseClicked

    private void lblSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSiguienteMouseClicked

        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila en la tabla.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            String RFC = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            ReporteTramite v = new ReporteTramite(RFC);
            v.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_lblSiguienteMouseClicked

    private void lblAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtrasMouseClicked
        Aplicacion v = new Aplicacion();
        v.setVisible(true);
        dispose();
    }//GEN-LAST:event_lblAtrasMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAtras;
    private javax.swing.JLabel lblAvanzar;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblRetroceder;
    private javax.swing.JLabel lblSiguiente;
    private javax.swing.JTextField txtAñoNacimiento;
    private javax.swing.JTextField txtNombreCompleto;
    private javax.swing.JTextField txtRFC;
    // End of variables declaration//GEN-END:variables
}
